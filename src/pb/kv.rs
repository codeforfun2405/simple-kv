// This file is @generated by prost-build.
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct KeyVal {
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
    #[prost(bytes = "bytes", tag = "2")]
    pub value: ::prost::bytes::Bytes,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CmdGet {
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CmdSet {
    #[prost(message, optional, tag = "1")]
    pub key_val: ::core::option::Option<KeyVal>,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CmdDel {
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CmdGetResp {
    #[prost(string, tag = "1")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub key_val: ::core::option::Option<KeyVal>,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CmdSetResp {
    #[prost(string, tag = "1")]
    pub status: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub key_val: ::core::option::Option<KeyVal>,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CmdDelResp {
    #[prost(string, tag = "1")]
    pub status: ::prost::alloc::string::String,
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct KvCommand {
    #[prost(oneof = "kv_command::Command", tags = "1, 2, 3")]
    pub command: ::core::option::Option<kv_command::Command>,
}
/// Nested message and enum types in `KvCommand`.
pub mod kv_command {
    #[derive(PartialOrd)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Command {
        #[prost(message, tag = "1")]
        Get(super::CmdGet),
        #[prost(message, tag = "2")]
        Set(super::CmdSet),
        #[prost(message, tag = "3")]
        Del(super::CmdDel),
    }
}
#[derive(PartialOrd)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct KvCommandResp {
    #[prost(oneof = "kv_command_resp::CommandResp", tags = "1, 2, 3")]
    pub command_resp: ::core::option::Option<kv_command_resp::CommandResp>,
}
/// Nested message and enum types in `KvCommandResp`.
pub mod kv_command_resp {
    #[derive(PartialOrd)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum CommandResp {
        #[prost(message, tag = "1")]
        GetResp(super::CmdGetResp),
        #[prost(message, tag = "2")]
        SetResp(super::CmdSetResp),
        #[prost(message, tag = "3")]
        DelResp(super::CmdDelResp),
    }
}
